 1044  where is docker
 1045  http :8080/product
 1046  http :8080/products/1
 1047  http :8080/product/1
 1048  docker ps
 1049  clear
 1050  docker images 
 1051  docker prune
 1052  docker container prune
 1053  docker rm $(docker ps -a)
 1054  docker rm $(docker ps -aq)
 1055  docker ps -aq
 1056  docker container prume
 1057  docker container prune
 1058  docker ps -aq
 1059  clear
 1060  docker ps -aq
 1061  pwd
 1062  cd $BOOK_HOME/Chapter04
 1063  clear
 1064  ./gradlew build
 1065  docker images
 1066  docker compose up -d
 1067  docker ps 
 1068  clear
 1069  sudo apt-get update
 1070  sudo apt-get install bash-completion
 1071  sudo curl -L https://raw.githubusercontent.com/docker/cli/master/contrib/completion/bash/docker -o /etc/bash_completion.d/docker
 1072  sudo curl -L https://raw.githubusercontent.com/docker/compose/master/contrib/completion/bash/docker-compose -o /etc/bash_completion.d/docker-compose
 1073  vi ~/.bashrc
 1074  source ~/.bashrc 
 1075  http :8080/product-composite/123
 1076  docker-compose down
 1077  clear
 1078  history
 1079  http :8080/product-composite/123
 1080  clear
 1081  ./test-em-all.bash start stop
 1082  clear
 1083  ./gradlew build
 1084  ./gradlew clean build
 1085  ./gradle build
 1086  gradle build
 1087  cd ..
 1088  git status
 1089  git restore *
 1090  git status
 1091  git checkout -- Chapter03/2-basic-rest-services/microservices/product-service/dockerfile
 1092  git checkout -- .vscode/Chapter03/2-basic-rest-services/microservices/product-service/dockerfile
 1093  git status
 1094  git clean -fd
 1095  clear
 1096  cd Chapter04/
 1097  ./gradlew build
 1098  ./gradlew clean build
 1099  git diff
 1100  ./gradlew clean build
 1101  ./gradlew  build
 1102  cd ..
 1103  git status
 1104  git add .vscode/
 1105  git commit -m 
 1106  git commit -m "Added vs code settings for resolving the autocomplete not working for the vs code "
 1107  clear
 1108  docker ps --format {{.Names}}
 1109  docker ps
 1110  docker ps --format {{.Names}}
 1111  git staus
 1112  $BOOK_HOME/
 1113  cd $BOOK_HOME
 1114  clear
 1115  cd Chapter03/2-basic-rest-services/
 1116  ./gradlew build
 1117  java -jar microservices/product-service/build/libs/*.jar &
 1118  clear
 1119  kill $(jobs -p)
 1120  docker
 1121  clear
 1122  cd ..
 1123  cd 2-basic-rest-services/
 1124  cd ..
 1125  cd Chapter04/
 1126  ls
 1127  clear
 1128  intellij
 1129  clear
 1130  ./gradlew :microservices/product-service/:build
 1131  ./gradlew :microservices:product-service:build
 1132  ls -l microservices/product-service/build/libs/
 1133  unzip -l microservices/product-service/build/libs/product-service-1.0.0-SNAPSHOT.jar 
 1134  ls
 1135  ls -l microservices/product-service/build/libs/
 1136  cd microservices/product-service/
 1137  docker build -t product-service .
 1138  docker images | grep prod
 1139  docker rm images acde6f58e632
 1140  docker images rm acde6f58e632
 1141  docker immages --help
 1142  docker immages --help | delete image
 1143  docker immages --help | delete
 1144  docker immages --help |grep "delete image"
 1145  docker immages --help | grep "delete"
 1146  docker immages --help | grep "remove"
 1147  docker immages --help | grep -i "remove"
 1148  docker immages --help | grep-i  "delete"
 1149  docker immages --help | grep -i  "delete"
 1150  clear
 1151  docker images
 1152  docker run --rm -p8080:8080 -e "SPRING_PROFILES_ACTIVE=docker" product-service
 1153  docker run --rm -p8080:8080 -d  -e "SPRING_PROFILES_ACTIVE=docker" product-service
 1154  clear
 1155  docker ps -aq
 1156  docker --help
 1157  clear
 1158  docker images --help
 1159  clear
 1160  docker compose logs -f product
 1161  clear
 1162  cd ..
 1163  cat test-em-all.bash | more
 1164  docker-compose ps
 1165  clear
 1166  diff api/build.gradle ../Chapter04/api/build.gradle 
 1167  cd ../Chapter05
 1168  diff api/build.gradle ../Chapter04/api/build.gradle 
 1169  pwd
 1170  clear
 1171  ./gradlew build
 1172  cp api/build.gradle ../Chapter04/api/
 1173  clear
 1174  ./gradlew build && docker-compose build && docker compose up
 1175  ./gradlew build && docker-compose build && docker compose up -d
 1176  docker compose down
 1177  clear
 1178  cd ..
 1179  git diff Chapter05 Chapter06
 1180  diff Chapter05 Chapter06
 1181  pwd
 1182  cd Chapter05/
 1183  clear
 1184  ./gradlew build
 1185  ./gradlew clean build
 1186  ./gradlew clean build --stacktrace
 1187  ./gradlew build
 1188  git status
 1189  git restore *
 1190  cd ../Chapter06
 1191  clear
 1192  ./gradlew build && docker-compose build && docker compose up
 1193  clear
 1194  ./gradlew microservices:product-service:test --tests PersistenceTests
 1195  clear
 1196  git status
 1197  git restore *
 1198  git status
 1199  git clean -fd
 1200  git status
 1201  cd ..
 1202  cd microservices_ushatech_magnus/
 1203  git clean -fd
 1204  git restore *
 1205  git status
 1206  clear
 1207  cd Chapter06/
 1208  ls
 1209  ./gradlew build
 1210  docker ps -a
 1211  docker container prune
 1212  docker ps -aq
 1213  cd Chapter04/
 1214  ./gradlew build
 1215  exit
 1216  cd Chapter06/
 1217  ./test-em-all.bash start stop
 1218  clear
 1219  cd ..
 1220  ls
 1221  git clone https://github.com/ushatechmanish/OCP1Z0-829_Preparation.git
 1222  ls
 1223  cd OCP1Z0-829_Preparation/
 1224  cd ..
 1225  mv OCP1Z0-829_Preparation ocp1z0829preparation
 1226  cd ocp1z0829preparation/
 1227  clear
 1228  code .
 1229  gradle init
 1230  mvn clean install
 1231  cd ..
 1232  ls
 1233  rm -rf ocp1z0829preparation/
 1234  clear
 1235  gradle init -type ocppreparation
 1236  ls
 1237  mkdir ocp1z0829preparation
 1238  cd ocp1z0829preparation/
 1239  ls
 1240  code .
 1241  cd microservices_ushatech_magnus/
 1242  cd Chapter06/
 1243  ./gradlew build && docker compose build && docker compose up
 1244  clear
 1245  docker ps -aq
 1246  docker compose exec mongodb mongosh product-db --quiet
 1247  docker compose exec mongodb mongosh product-db --quiet --eval "db.products.find()"
 1248  docker-compose exec mongodb mongosh product-db --quiet --eval "db.products.find()"
 1249  docker-compose exec mongodb mongosh --version
 1250  docker-compose exec mongodb /usr/bin/mongosh product-db --quiet --eval "db.products.find()"
 1251  docker-compose exec mongodb-1 mongosh product-db --quiet --eval "db.products.find()"
 1252  docker ps -aq
 1253  docker ps -a
 1254  docker container list
 1255  docker-compose exec chapter06-mongodb-1 mongosh product-db --quiet --eval "db.products.find()"
 1256  docker-compose exec chapter06-mongodb-1 mongosh --version
 1257  clear
 1258  docker-compose exec chapter06-mongodb-1 mongosh --version
 1259  code .
 1260  pwd
 1261  cd cashcard/cashcard/
 1262  code .
 1263  ls
 1264  cd core-spring-labfiles/
 1265  cd ..
 1266  cd cashcard/
 1267  git log -p --reverse
 1268  cd cashcard/
 1269  cd ..
 1270  ls 
 1271  ls -lrth
 1272  cd cashcard/
 1273  clear
 1274  git log -p --reverse
 1275  clear
 1276  cd ..
 1277  cd cashcard/
 1278  push
 1279  git push
 1280  clear
 1281  cd ~/core-spring-labfiles/
 1282  git status
 1283  git log -p --reverse
 1284  clear
 1285  git log -p --reverse --skip=1
 1286  git log -p --reverse --skip=2
 1287  git log -p --reverse --skip=1
 1288  code .
 1289  cd ..
 1290  code .
 1291  clear
 1292  git pull
 1293  git config pull.rebase false
 1294  git pull
 1295  ./gradlew test
 1296  cd ..
 1297  git clone https://github.com/ushatechmanish/DSA-Bootcamp-Java.git
 1298  cd DSA-Bootcamp-Java/
 1299  code .
 1300  cd ..
 1301  rm -rf cashcard/
 1302  git clone https://github.com/ushatechmanish/cashcard.git
 1303  cd cashcard/
 1304  code .
 1305  ls -a
 1306  cd ..
 1307  ls
 1308  rm -rf *gradle*
 1309  ls
 1310  find src -type f
 1311  rm -rf src/
 1312  ls
 1313  rm HELP.md
 1314  rm HELP.md\:Zone.Identifier 
 1315  ls
 1316  rm build/
 1317  ls
 1318  rm -rf build/
 1319  mv cashcard/cashcard .
 1320  mv -r  cashcard/cashcard .
 1321  cd cashcard/
 1322  ls
 1323  mv * ..
 1324  ls -a
 1325  mv .git* ..
 1326  mv .gradle ..
 1327  ls
 1328  ls -a
 1329  cd ..
 1330  rm -rf cashcard/
 1331  code .
 1332  cd ..
 1333  ls
 1334  cd dsa/
 1335  ls
 1336  code .
 1337  ls
 1338  cd cashcard/
 1339  ls
 1340  cd cashcard/
 1341  code .
 1342  ls
 1343  cd ocp1z0829preparation/
 1344  ls
 1345  code .
 1346  notepad text
 1347  clear
 1348  cd ~
 1349  ls
 1350  cd core-spring-labfiles/
 1351  ls
 1352  git status
 1353  cd ..
 1354  rm -rf core-spring-labfiles/
 1355  git clone https://github.com/vmware-tanzu-learning/core-spring-code.git
 1356  cd core-spring-code/
 1357  ls
 1358  rm -rf .git
 1359  git init
 1360  git config --global init.defaultBranch main
 1361  ls -a
 1362  rm -rf .git
 1363  git init
 1364  clear
 1365  ls
 1366  cd lab/
 1367  ls
 1368  ./gradlew build
 1369  code .
 1370  cd ..
 1371  ls
 1372  cd core-spring-code/
 1373  cd lab/
 1374  ls
 1375  code .
 1376  cd ..
 1377  ls
 1378  cd core-spring-code/
 1379  ls
 1380  code .
 1381  ls
 1382  mkdir statement_to_tally_voucher
 1383  cd statement_to_tally_voucher/
 1384  clear
 1385  echo "# StatementToTallyVoucher" >> README.md
 1386  git init
 1387  git add README.md
 1388  git commit -m "first commit"
 1389  git branch -M main
 1390  git remote add origin https://github.com/ushatechmanish/StatementToTallyVoucher.git
 1391  git push -u origin main
 1392  clear
 1393  git clone https://github.com/ushatechmanish/StatementToTallyVoucher.git
 1394  ls
 1395  cd ..
 1396  ls 
 1397  rm -rf statement_to_tally_voucher/
 1398  git clone https://github.com/ushatechmanish/StatementToTallyVoucher.git
 1399  cd StatementToTallyVoucher/
 1400  ls
 1401  echo "# StatementToTallyVoucher" >> README.md
 1402  git init
 1403  git add README.md
 1404  git commit -m "first commit"
 1405  git branch -M main
 1406  git remote add origin https://github.com/ushatechmanish/StatementToTallyVoucher.git
 1407  git push
 1408  ls
 1409  git push
 1410  git config --global credential.helper cache
 1411  git config --global credential.helper store
 1412  git push origin main
 1413  clear
 1414  code . 
 1415  cd ..
 1416  ls
 1417  rm -rf StatementToTallyVoucher/
 1418  git clone https://github.com/ushatechmanish/angular-course.git
 1419  lsa
 1420  ls
 1421  cd angular-course/
 1422  code .
 1423  git log -p --reverse
 1424  ls
 1425  cd official-spring-framework/
 1426  git log -p --reverse
 1427  cd ..
 1428  ls
 1429  cd dsa/
 1430  clear
 1431  code .
 1432  cd ..
 1433  ls
 1434  mkdir goodritch
 1435  crm -rf goodritch/
 1436  rm -rf goodritch/
 1437  cd manish_mono_repo/
 1438  ls
 1439  cd java/
 1440  ls
 1441  cd dsa/
 1442  git status
 1443  git pull
 1444  clear
 1445  code .
 1446  cd ..
 1447  cd ~
 1448  ls
 1449  ls | grep terraform
 1450  git clone https://github.com/hashicorp/learn-terraform.git
 1451  cd learn-terraform/
 1452  code .
 1453  cd ..
 1454  ls
 1455  cd dsa/
 1456  code .
 1457  clear
 1458  cd ..
 1459  ls
 1460  cd angular-course/
 1461  code .
 1462  cd ..
 1463  cd angular-practice/
 1464  code .
 1465  node -v
 1466  ls
 1467  sudo su
 1468  ng
 1469  sudo su
 1470  ng
 1471  npm doctor
 1472  npm install -g @angular/cli
 1473  npm -v
 1474  node -v
 1475  ng
 1476  sudo apt install nodejs
 1477  ng
 1478  sudo apt uninstall nodejs
 1479  sudo apt remove nodejs
 1480  npm -v
 1481  sudo apt update
 1482  sudo apt upgrade -y
 1483  curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
 1484  sudo apt install -y nodejs
 1485  node -v
 1486  npm -v
 1487  sudo npm install -g @angular/cli
 1488  ng version
 1489  ng
 1490  ng help
 1491  clear
 1492  ng version
 1493  ls
 1494  cd angular-practice/
 1495  clear
 1496  ng new angular-course
 1497  rm -rf angular-course/
 1498  sudo su
 1499  ls
 1500  ng new angular-course
 1501  rm -rf angular-course/
 1502  ls
 1503  cd angular-course/
 1504  ng serve
 1505  git status
 1506  git init
 1507  git status
 1508  git add .
 1509  git status
 1510  git commit -m "Inital commit"
 1511  clear
 1512  cd angular-course/
 1513  npm install
 1514  sudo su
 1515  ls
 1516  cd ..
 1517  rm -rf angular-practice/
 1518  sudo su
 1519  sudo chmod -R u+w /home/manish/angular-practice/angular-course
 1520  cd ..
 1521  ls -lrth
 1522  cd angular-
 1523  cd angular-practice/
 1524  ls -lrth
 1525  sudo chown manish:manish angular-course
 1526  ls -lrth
 1527  git init
 1528  git add . 
 1529  git commit -a -m "Initial commit . Added Header Component"
 1530  cd ..
 1531  ls
 1532  cd angular-practice/
 1533  ls -lrth
 1534  sudo chown manish:manish angular-course
 1535  ls -lrth
 1536  cd angular-course/
 1537  ls -lrth
 1538  sudo chown -R manish:manish /home/manish/angular-practice/angular-course
 1539  ls -lrth
 1540  npm install
 1541  whoami
 1542  npm start
 1543  cd angular-course/
 1544  ng serve
 1545  git status
 1546  docker network create jenkins
 1547  docker run   --name jenkins-docker   --rm   --detach   --privileged   --network jenkins   --network-alias docker   --env DOCKER_TLS_CERTDIR=/certs   --volume jenkins-docker-certs:/certs/client   --volume jenkins-data:/var/jenkins_home   --publish 2376:2376   docker:dind   --storage-driver overlay2
 1548  git config --global core.editor "code --wait"
 1549  ls
 1550  mkdir working
 1551  cd working/
 1552  code . 
 1553  git init
 1554  git branch --list
 1555  git branch
 1556  clear
 1557  git add . 
 1558  git status
 1559  git status -s
 1560  git commit -m "Initial commit "
 1561  git status -s
 1562  clear
 1563  git commit -a -m "Second commit"
 1564  clear
 1565  git log
 1566  git log -s
 1567  clear
 1568  git log
 1569  git checkout 51c359d9d2ff9d5b5384762e5616cd6db3417da1
 1570  clear
 1571  git log
 1572  git checkout 735cd936bc40d941633a6c11999fc2c80fbb2d85
 1573  clear
 1574  git log
 1575  git log --all
 1576  git checkout 51c359d9d2ff9d5b5384762e5616cd6db3417da1
 1577  git add .
 1578  git status
 1579  git checkout main
 1580  git status
 1581  git rm --cached FileA.txt 
 1582  git add .
 1583  clear
 1584  git status
 1585  git status -s
 1586  git add .
 1587  git status
 1588  clear
 1589  cd ..
 1590  ls
 1591  cd angular-practice/
 1592  ls
 1593  code .
 1594  cd ..
 1595  ls
 1596  rm -rf angular-*
 1597  ls
 1598  clear
 1599  ng new angular-hello-world
 1600  cd angular-hello-world/
 1601  ls
 1602  cd src/
 1603  tree -F
 1604  sudo snap install tree
 1605  tree -F
 1606  code .
 1607  cd ..
 1608  code .
 1609  ng serve
 1610  cd ..
 1611  cd angular-reddit/
 1612  code .
 1613  ng generate component hello-world
 1614  git init
 1615  git commit -a -m "Initial Commit"
 1616  clear
 1617  ng generate component user-item
 1618  ng generate component user-list
 1619  git commit -a -m "Added the list and used @Input for passing on the variable from parent to child "
 1620  cd ..
 1621  ls
 1622  ng new angular-reddit
 1623  rm -rf angular-reddit/
 1624  ng new angular-reddit
 1625  cd angular-reddit/
 1626  ng serve
 1627  clear
 1628  ng serve
 1629  npm instll -g tsum
 1630  npm install -g tsum
 1631  sudo npm install -g tsum
 1632  tsun
 1633  sudo tsun
 1634  sudo npm install -g tsun
 1635  tsun
 1636  sudo apt remove tsum
 1637  sudo apt remove tsun
 1638  clear
 1639  cd ..
 1640  ng new angula-18-tutorial
 1641  mv -rf angula-18-tutorial/ angular-18-tutorial
 1642  mv  angula-18-tutorial/ angular-18-tutorial
 1643  cd angular-18-tutorial/
 1644  code .
 1645  git init
 1646  git commit -a -m "Added the form and also the click functionality"
 1647  ng generate component article
 1648  git status
 1649  git log
 1650  clear
 1651  git status
 1652  ng generate component article
 1653  git commit -a -m "Added article component"
 1654  git commit -a -m "The article component has been added . The semantic css needs to be installed "
 1655  git add . 
 1656  git commit -a -m "The article component has been added . The semantic css needs to be installed "
 1657  npm install semantic-ui --save
 1658  npm install semantic-ui-css --save
 1659  git status
 1660  git status -s
 1661  git commit -a -m "Added semantic css using npm install semantic-ui-css --save and also added the "node_modules/semantic-ui-css/semantic.min.css" in angular.json styles section
 1662   "
 1663  clear
 1664  git status -s
 1665  git commit -a -m "The vote up and vote down functionality is working fine now"
 1666  git status -s
 1667  git add .
 1668  git status -s
 1669  git commit -m "Added the model to the project"
 1670  git status
 1671  git commit -a -m "Now starting adding the multiple articles in app component"
 1672  git status -s
 1673  git commit -a -m "Added artciels to app component"
 1674  ng serve
 1675  git init
 1676  git add .
 1677  git status
 1678  git commit -a -m "We can use interpolation inside backticks "
 1679  ng generate component user
 1680  clear
 1681  ng generate component child
 1682  ng generate component comments
 1683  clear
 1684  cd ..
 1685  cd dsa/
 1686  code .
 1687  whereis python
 1688  sudo apt install python
 1689  sudo apt update
 1690  sudo apt install software-properties-common
 1691  sudo add-apt-repository ppa:deadsnakes/ppa
 1692  sudo apt update
 1693  sudo apt install python3.11
 1694  python3 --version
 1695  cd ..
 1696  mkdir python
 1697  cd python/
 1698  code .
 1699  clear
 1700  date
 1701  clear
 1702  game
 1703  clear~
 1704  /bin/python3.11 /home/manish/python/practice.py
 1705  cd ..
 1706  ls 
 1707  cd microservices_ushatech_magnus/
 1708  clear
 1709  ls
 1710  cd ..
 1711  cd dsa/
 1712  code .
 1713  cd ..
 1714  mkdir dynamic_programming
 1715  cd dynamic_programming/
 1716  code .
 1717  cd ..
 1718  code .
 1719  cd dynamic_programming/
 1720  code .
 1721  ls
 1722  cd src/
 1723  ls
 1724  cd main
 1725  ls
 1726  cd ..
 1727  cd..
 1728  cd ..
 1729  ls -a
 1730  git rm -r --cached target
 1731  git commit -m "Stop tracking target directory"
 1732  git status
 1733  git rm -r --cached target
 1734  mv target/.gitignore .
 1735  git rm -r --cached target
 1736  git remote -v
 1737  cd ..
 1738  ls -lrth
 1739  whereami
 1740  whoami
 1741  ls
 1742  ls -a
 1743  cd ..
 1744  ls
 1745  ls | grep spring
 1746  cd bitwiseoperator/
 1747  code .
 1748  sudo apt update
 1749  whereis npm
 1750  ls
 1751  cd react/
 1752  ls
 1753  code .
 1754  ls | grep react
 1755  ls .. | grep react
 1756  http help
 1757  npm create-next-app@latest my-react-app
 1758  npx create-next-app@latest my-react-app
 1759  npm func
 1760  npm fund
 1761  npm run dev
 1762  cd my-react-app/
 1763  npm run dev
 1764  npm install @types/react @types/react-dom
 1765  ls -lrth
 1766  rm -rf app
 1767  rm -rf settings.gradle 
 1768  rm -rf gradlew gradlew.bat 
 1769  ls -lrth
 1770  mkdir heaps
 1771  cd heaps/
 1772  code .
 1773  cd ..
 1774  gradle init
 1775  ./gradle build
 1776  ./gradlew build
 1777  java --version
 1778  ./gradlew build
 1779  pwd
 1780  ls
 1781  grep pratibha
 1782  ls | grep pratibha
 1783  mkdir pratibha
 1784  cd pratibha
 1785  touch Main.java
 1786  code .
 1787  echo $ PATH
 1788  echo $PATH
 1789  javac Main.java
 1790  java Main
 1791  where java
 1792  where is java 
 1793  echo $PATH | grep java 
 1794  open java 
 1795  java - version
 1796  java -versin
 1797  java -version
 1798  whereis java
 1799  clear
 1800  javac Main.java
 1801  java Main Pratibha
 1802  java Main
 1803  cd ..
 1804  ls | grep python
 1805  cd python/
 1806  code . 
 1807  /bin/python3.11 /home/manish/python/merge_excel_sheets.py
 1808  pip install pandas
 1809  sudo apt install python3-pip
 1810  pip install pandas
 1811  clear
 1812  /bin/python3.11 /home/manish/python/merge_excel_sheets.py
 1813  pip show pandas
 1814  /bin/python3.11 /home/manish/python/merge_excel_sheets.py
 1815  python -m pip install pandas
 1816  python3 -m pip install pandas
 1817  pip show pandas
 1818  cd ..
 1819  ls
 1820  cd microservices_ushatech_magnus/
 1821  ls
 1822  cd Chapter03
 1823  code .
 1824  cd ..
 1825  ls
 1826  cd microservices_ushatech_magnus/Chapter07/
 1827  code .
 1828  mvn clean install
 1829  cd ..
 1830  cd Chapter07/
 1831  code .
 1832  cd ../Chapter10
 1833  code .
 1834  cd microservices_ushatech_magnus/Chapter03/
 1835  ls
 1836  sdk install springboot
 1837  clear
 1838  ./gradlew clean
 1839  cd ..
 1840  cd Chapter07/
 1841  clear
 1842  ./test-em-all.bash start
 1843  ./gradlew build
 1844  ./test-em-all.bash start
 1845  docker compose up -d --scale review=2
 1846  docker compose exec product-composite getent hosts review 
 1847  diff ../Chapter07 ../Chapter08
 1848  diff -r ../Chapter07 ../Chapter08
 1849  diff -r ../Chapter07 ../Chapter09
 1850  ./test-em-all.bash stop
 1851  cd ../Chapter09
 1852  clear
 1853  ./gradlew build
 1854  docker compose build
 1855  ./test-em-all.bash 
 1856  ./test-em-all.bash  start
 1857  docker compose up -d --scale review=3
 1858  ls
 1859  mkdir threads
 1860  cd threads/
 1861  ls
 1862  cd practice/
 1863  code .
 1864  clear
 1865  vmstat
 1866  vmstat -s
 1867  vmstat 5
 1868  vmstat -S M
 1869  vmstat -a
 1870  vmstat 1 10 
 1871  java help
 1872  java -help
 1873  clear
 1874  jconsole
 1875  clear
 1876  cd ..
 1877  ls | grep streams
 1878  ls | grep stream
 1879  ls
 1880  cd ocp1z0829preparation/
 1881  ls
 1882  cd ..
 1883  mkdir streams
 1884  cd streams/
 1885  code .
 1886  cd ..
 1887  mkdir rent
 1888  cd rent/
 1889  code .
 1890  cd frontend/
 1891  npx create-react-rent-app .
 1892  npx create-react-app rentui
 1893  npm start
 1894  cd rentui/
 1895  nom start
 1896  npm start
 1897  cd api/rest/
 1898  mvn clean install
 1899  mvn springboot:run
 1900  ./mvnw spring-boot:run
 1901  mvn clean install
 1902  ./mvnw spring-boot:run
 1903  ./gradlew init
 1904  gradle init
 1905  cd rest/
 1906  ls
 1907  cd ..
 1908  ls
 1909  cd frontend/
 1910  ls
 1911  npm start
 1912  cd ..
 1913  cd api/
 1914  ls
 1915  pwd
 1916  ls
 1917  cd ..
 1918  ls
 1919  cd cd core-spring-code/
 1920  cd core-spring-code/
 1921  ls
 1922  cd ..
 1923  cd official-spring-framework/
 1924  ls
 1925  code .
 1926  cd
 1927  cd rent/
 1928  ls
 1929  cd api/
 1930  ls
 1931  cd rest/
 1932  ls
 1933  ./gradlew bootRun
 1934  cd ..
 1935  code .
 1936  cd api/rest/
 1937  ./gradlew build
 1938  ./gradlew bootRun
 1939  ls
 1940  cd microservices_ushatech_magnus/
 1941  cd ThreadsPractice/
 1942  clear
 1943  cd ..
 1944  mv -rf ThreadsPractice/ ~
 1945  mv  ThreadsPractice/ ~
 1946  ls
 1947  cd ~
 1948  cd ThreadsPractice/
 1949  sudo apt install groovy
 1950  sdkman
 1951  whereis sdk
 1952  sdk list
 1953  java -version
 1954  whereami
 1955  where am i 
 1956  pwd
 1957  ls
 1958  cd pratibha/
 1959  ls
 1960  rm -f 
 1961  ls
 1962  rm -f *
 1963  ls
 1964  clear
 1965  whereis java
 1966  sudo su
 1967  ls
 1968  ./mvnw clean package
 1969  ls
 1970  cd src/main/java/in/ushatech/spring_practice/
 1971  mkdir controller
 1972  mkdir service model repository 
 1973  cd model 
 1974  ls
 1975  cd demo
 1976  ls
 1977  pwd
 1978  cd..
 1979  cd ..
 1980  ls -l 
 1981  ls ll 
 1982  ll
 1983  ls
 1984  cd gradle/
 1985  ls
 1986  rm -rf *
 1987  ls
 1988  cd ..
 1989  rm -rf gradle/
 1990  mkdir gradle_lab
 1991  cd gradle_lab/
 1992  clear
 1993  gradle init
 1994  tree .
 1995  ./gradlew tasks
 1996  ./gradlew tasks --all
 1997  ./gradlew app:test
 1998  ./gradlew :app:test
 1999  df -hg
 2000  df -h -g
 2001  df -h
 2002  du
 2003  man du
 2004  cd ~
 2005  df -hg
 2006  df -h
 2007  du
 2008  clear
 2009  cd devops/
 2010  du
 2011  ls
 2012  cd project/
 2013  du
 2014  clear
 2015  ls
 2016  vi surnames.txt 
 2017  head surnames.txt 
 2018  head -n 4 surnames.txt 
 2019  tail surnames.txt 
 2020  tail -n 5 surnames.txt 
 2021  git statu
 2022  git status
 2023  git add . 
 2024  cd ..
 2025  git remote -v
 2026  cd project/
 2027  git commit -m "Added surnames and removed names.txt and added some of the git branch tasks . Pending to add more git branch tasks "
 2028  git push origin main
 2029  vi ~/.git-credentials 
 2030  git config --global credential.helper store
 2031  git push origin main
 2032  cd ..
 2033  ls
 2034  cd project/
 2035  vi setup-git-credentials-setup.txt
 2036  git push origin main
 2037  git status
 2038  git add .
 2039  git commit -m "Adding token setup details "
 2040  git oush origin main
 2041  git push origin main
 2042  history
 2043  history > history_commands.txt
